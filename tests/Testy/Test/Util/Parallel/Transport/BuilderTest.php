<?php
/**
 * Test class for \Testy\Util\Parallel\Transport\Builder.
 * Generated by PHPUnit on 2012-03-24 at 14:59:34.
 */
namespace Testy\Test\Util\Parallel\Transport;

class BuilderTest extends \PHPUnit_Framework_TestCase {

    /**
     * @dataProvider buildProvider
     */
    public function testBuild($sTransport, $sExpected) {
        $oTransport = \Testy\Util\Parallel\Transport\Builder::build($sTransport);
        $this->assertInstanceOf('\\Testy\\Util\\Parallel\\TransportInterface', $oTransport);
        $this->assertInstanceOf($sExpected, $oTransport);
    }

    /**
     * Data provider for build-test
     *
     * @return array
     */
    public function buildProvider() {
        return array(
            array(
                'shared',
                \Testy\Util\Parallel\Transport\Builder::TRANSPORT_SHARED
            ),
            array(
                'file',
                \Testy\Util\Parallel\Transport\Builder::TRANSPORT_FILE
            ),
            array(
                'memcache',
                \Testy\Util\Parallel\Transport\Builder::TRANSPORT_MEMCACHE
            ),
            array(
                \Testy\Util\Parallel\Transport\Builder::TRANSPORT_DEFAULT,
                \Testy\Util\Parallel\Transport\Builder::TRANSPORT_SHARED
            )
        );
    }

    /**
     * Test that a unknown transport throws an exception
     */
    public function testBuildException() {
        try {
            \Testy\Util\Parallel\Transport\Builder::build('blafasel');
            $this->fail('An exception should have been thrown, when creating a unknown Transport');
        }
        catch (\Testy\Util\Parallel\Transport\Exception $oException) {
            $this->assertEquals($oException->getMessage(), \Testy\Util\Parallel\Transport\Exception::UNKNOWN_TRANSPORT);
        }
    }
}
