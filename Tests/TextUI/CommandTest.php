<?php
/**
 * Test class for Testy_TextUI_Command.
 * Generated by PHPUnit on 2011-12-16 at 15:25:52.
 */
class Testy_TextUI_CommandTest extends PHPUnit_Framework_TestCase {

    /**
     * The test dummy
     *
     * @var Testy_TextUI_Command
     */
    protected $_object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    public function setUp() {
        $this->_object = new Testy_TextUI_Command();
    }

    /**
     * Test handleArguments
     *
     * @param  boolean $bExpected
     * @param  array $aArguments
     *
     * @dataProvider handleArgumentsProvider
     */
    public function testHandleArguments($bExpected, $aArguments) {
        try {
            $this->_object->handleArguments($aArguments);
        }
        catch (Exception $oConfigException) {
            $this->assertEquals(Testy_Config::ERROR, $oConfigException->getMessage());
        }

        $aReturn = $this->_object->getArguments();
        $this->assertEquals($bExpected, (empty($aReturn) !== true));
    }

    /**
     * Data-provider for testHandleArguments
     */
    public function handleArgumentsProvider() {
        return array(
            array(
                false,
                array()
            ),
            array(
                false,
                array(
                    '--unknown'
                )
            ),
            array(
                false,
                array(
                    '--verbose'
                )
            ),
            array(
                true,
                array(
                    '--config=test'
                )
            )
        );
    }

    /**
     * Test the usage-string
     */
    public function testShowHelp() {
        $this->expectOutputString(Testy_TextUI_Command::USAGE . PHP_EOL);
        Testy_TextUI_Command::showHelp();
    }

    /**
     * Test the usage-string
     */
    public function testShowHelpArgument() {
        $this->expectOutputString(Testy_TextUI_Command::USAGE . PHP_EOL);
        $aArguments = array(
            '--help'
        );
        $this->assertFalse($this->_object->handleArguments($aArguments));
    }

    /**
     * Test the version-string
     */
    public function testPrintVersionString() {
        $this->expectOutputString(Testy_TextUI_Command::VERSION . PHP_EOL);
        Testy_TextUI_Command::printVersionString();
    }

    /**
     * Test the version-string
     */
    public function testPrintVersionStringArgument() {
        $this->expectOutputString(Testy_TextUI_Command::VERSION . PHP_EOL);
        $aArguments = array(
            '--version'
        );
        $this->assertFalse($this->_object->handleArguments($aArguments));
    }
}
